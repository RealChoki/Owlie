{"text": " Hallo zusammen, wir schauen uns jetzt unser allererstes Java-Programm an, das hei\u00dft wir schreiben auch unseren allerersten Code. Klassischerweise hei\u00dft das dann Hello World oder auf Deutsch Hallo Welt. Genau, das hei\u00dft wir gucken uns heute unsere allererste Java-Datei an, beziehungsweise die sogenannte Main-Methode, was es damit auf sich hat, sehen wir sofort. Und wir werden dabei sehen, was man unter sogenannter Syntax versteht, das haben wir im vorherigen Video schon mal kurz erw\u00e4hnt. Und eben auf der anderen Seite auch, was es mit sogenannten Syntax-Fehlern auf sich hat. Okay, ich w\u00fcrde sagen, wir legen direkt los. Ich habe hier mal so ein kleines Demo-VPL f\u00fcr mich zum Spielen angelegt und das ist so neu, dass ich noch nicht mal irgendeine Datei erstellt habe. Das hei\u00dft, das mache ich hier sofort. Ich lege hier eine neue Java-Datei an, der schl\u00e4gt mir schon glorreiche Namen vor, die ich offenbar fr\u00fcher mal verwendet habe. Schweinsgerlok.java, super Name, machen wir jetzt nicht. Ich w\u00fcrde die Datei einfach mal Start.java nennen, hatte ich auch schon mal gemacht. Wichtig ist nat\u00fcrlich dieses K\u00fcrzel, dieses Datei-K\u00fcrzel, Dateiendung.java. Wichtig ist auch, dass ich hier die Datei mit einem gro\u00dfen Buchstaben benenne und das liegt da dran, wir m\u00fcssen hier so ein bisschen vorgreifen, ohne zu tief reinzugehen, dass ich in Java klassischerweise beginnen muss mit Public Class und dann dem Namen, den ich hier eingegeben habe. Auch hier nat\u00fcrlich Gro\u00df- und Kleinschreibung beachten, Start. Das hat mit diesem Thema Objektorientierung zu tun. Wir erinnern uns, Java ist eine objektorientierte Programmiersprache und das ist am Anfang nat\u00fcrlich schwierig, einen Bogen, um Objektorientierung zu machen, wenn man in einer objektorientierten Programmiersprache unterwegs ist. Deswegen geh\u00f6rt das so ein bisschen zu dem Teil der Sprache, den wir anfangs erst mal so ein bisschen akzeptieren, aber dann uns nach und nach erschlie\u00dfen im Laufe der kommenden Wochen. Okay, nach diesem Public Class, in unserem Fall Start, weil die Datei auch Start.java hei\u00dft, setze ich geschweifte Klammern und das VPL ist hier auch schon so nett, so eine schlie\u00dfende geschweifte Klammer anzulegen, beziehungsweise hier auch so ein bisschen einzur\u00fccken. In diesen geschweiften Klammern steht sozusagen ein Scope, ein Umfang sozusagen, das w\u00e4re jetzt hier der Umfang von dieser Public Class Start. Wie gesagt, das hinterfragen wir jetzt erst mal gar nicht so sehr und hier k\u00f6nnen wir jetzt den Startpunkt von unserem Java-Code anlegen oder festlegen und das w\u00e4re die sogenannte Main-Methode. Hier gibt es, sage ich mal, die klassische veraltete Syntax, wenn man so will oder immer noch g\u00fcltige Syntax, aber die, die es schon immer gab sozusagen. Es gibt inzwischen auch in neueren Java-Versionen eine neue Syntax, um die Main-Methode zu schreiben. Das Problem ist nur, dass das im VPL nicht funktioniert, weil man daf\u00fcr, weil diese neue Syntax so ein experimentelles Release ist oder so \u00e4hnlich wird das genannt von Java und das VPL das einfach noch nicht akzeptiert. Das hei\u00dft, hier zeige ich jetzt einmal die klassische, immer g\u00fcltige sozusagen Variante, um die Main-Methode zu schreiben, das hei\u00dft den Einstieg in unser Java-Programm. Hier sto\u00dfen wir jetzt auch wieder auf so ein paar Begriffe, die wir erst mal ein bisschen ignorieren und ausklammern und uns dann im Laufe des Semesters erschlie\u00dfen. Und zwar sage ich Public Static Void Main. Main ist der Name, also der Name der Methode. Die Main-Methode hei\u00dft Main. Und dann setze ich runde Klammern und sage String, eckige Klammern, \u00f6ffnendes und schlie\u00dfende eckige Klammern, Arcs. Und auch hier nach diesem langen Satzgef\u00fchl, den ich hier hingeschrieben habe, setze ich wieder geschweifte Klammern oder eine geschweifte Klammer und kriege hier so eine schlie\u00dfende geschweifte Klammer direkt erkannt. Das ist der Start unserer Java-Anwendung. Wie gesagt, es gibt noch eine neuere Syntax, die akzeptiert das VPL aber nicht, kann ich gerne sp\u00e4ter nochmal ganz kurz zeigen. Jetzt m\u00f6chte ich aber auch nat\u00fcrlich irgendwas sehen. Ich kann hier die Datei speichern und die Datei ausf\u00fchren, sehe aber nat\u00fcrlich noch nicht viel. Das hei\u00dft, was ich hier einmal machen m\u00f6chte, ist irgendeinen Text auf diesem schwarzen Fenster, was wir gerade gesehen haben, auf der Konsole auszugeben. Und daf\u00fcr schreibe ich System.out.println. Runde Klammern. Nach diesen runden Klammern ein Semikolon. Das ist wichtig, in Java ein Statement, also sowas wie eine Anweisung letzten Endes, durch so ein Semikolon abzuschlie\u00dfen. Und in die runde Klammern kann ich jetzt den Text mit Anf\u00fchrungszeichen schreiben, den ich gerne auf meiner Konsole sehen w\u00fcrde. Und wir hatten ja schon auf der ersten Folie stehen Hallo Welt, also \u00fcbernehme ich das jetzt einfach mal, speichere die Datei, f\u00fchre das Ganze aus und sehe jetzt hier Hallo Welt. Super. Wir haben jetzt hier bei diesem System.out.println stehen. Das sorgt daf\u00fcr, dass wir automatisch, nachdem dieser Text auf der Konsole ausgegeben wird, so einen Zeilenumbruch haben. Das hei\u00dft, wenn ich mir das jetzt einfach mal kopiere und nochmal aus einf\u00fcge und hier dann vielleicht sage Hallo Brock 1 in der zweiten Zeile, hier w\u00fcrden die Texte direkt untereinander ausgegeben werden. Es gibt auch noch die M\u00f6glichkeit, hier dieses ln wegzulassen und dann eben entsprechend keinen Zeilenumbruch zu haben. Das hei\u00dft, die Texte w\u00fcrden nebeneinander gezeigt werden. Okay. So viel dazu. Wir haben nat\u00fcrlich bis jetzt sinnvollerweise nur g\u00fcltigen Java-Code geschrieben. Das hei\u00dft, wir haben der Java-Syntax gefolgt. Die Java-Syntax oder die Syntax der Programmiersprache Java legt fest, welchen Aufbau so ein Programm haben soll, was g\u00fcltige Zeichen sind und so weiter und so fort. Das hei\u00dft, wenn ich jetzt hier zum Beispiel einmal auf der Tastatur ausrutsche, die Datei speichere und dann versuche auszuf\u00fchren, dann wird es hier hei\u00dfen, beim Kompilieren ist ein Fehler aufgetreten. Dieses fsd, was auch immer ich da gerade reingehauen habe, ist irgendwas, womit Java nichts anfangen kann. Und dementsprechend kann der Code nicht kompilieren. Das sieht jetzt nat\u00fcrlich relativ logisch aus. Wir hatten vorhin gesagt, das ist so ein ganz, ganz klassischer Fall, der einem auch sp\u00e4ter in der Programmierung immer nochmal passieren kann, dass man zum Beispiel so ein Semikolon vergisst, was dann nat\u00fcrlich auch keine g\u00fcltige Java-Syntax mehr eigentlich ist. Also ich muss nicht auf der Tastatur ausrutschen, um sozusagen was zu machen, was nicht von Java kompiliert werden kann. Wir probieren es mal aus. Ich habe jetzt hier, wie gesagt, so ein Semikolon gel\u00f6scht und w\u00fcrde auch hier angezeigt bekommen, dass eben eigentlich so ein Semikolon an der Stelle erwartet worden w\u00e4re und dass der Code deswegen nicht so, wie wir es vorhin hatten, in so diesem schicken schwarzen Fenster gestartet wird. Okay. Also nehmen wir dieses Semikolon gerne hin. Eine Sache, die ich abschlie\u00dfend noch zeigen m\u00f6chte, ist ein Kommentar in Java. Wir haben jetzt einmal sch\u00f6n was auf der Konsole ausgegeben, also in diesem schwarzen Fenster, was erscheint, wird in unserem Fall Hallo Welt angezeigt. Ich habe dieses Hallo Probe 1 wieder gel\u00f6scht. Jetzt kann es nat\u00fcrlich sein, dass ich mir zum Beispiel ranschreiben m\u00f6chte, was dieser Code hier macht. Und da gibt es die M\u00f6glichkeit in Java, es gibt verschiedene M\u00f6glichkeiten f\u00fcr Kommentare, aber ich zeige jetzt erstmal die hier, die ich auch pers\u00f6nlich eigentlich f\u00fcr eine ziemlich einfache halte, nehme ich zwei solche Slashes und dann hier hinschreiben, was auch immer dieser Code gibt. Hallo Welt auf der Konsole aus. Und dieser Kommentar hier, der ist jetzt nur f\u00fcr mich. Das hei\u00dft, wenn ich jetzt den Code speichere und ausf\u00fchre, zeigt jetzt hier immer noch so ein rotes X, aber es liegt an der VPL, die war ein bisschen langsam. Deswegen sehe ich nat\u00fcrlich immer noch Hallo Welt, aber habe mir hier so einen kleinen Kommentar angeschrieben. Und der Kommentar ist ein Kommentar. Das hei\u00dft, hier ist nat\u00fcrlich keine Java-Syntax mehr erfordert, sondern das ist sozusagen eine Information f\u00fcr mich, die ich mir reinschreibe, um zum Beispiel meinen Code irgendwie besser nachvollziehen zu k\u00f6nnen. Ich fasse nochmal ganz kurz zusammen. Wir haben in Java eine Datei oder wir legen eine Datei an, die hat dann die Endung .java. Diese Datei hat einen Namen, der beginnt mit einem gro\u00dfen Buchstaben. Was es damit auf sich hat, gucken wir uns in, ich w\u00fcrde sagen, eineinhalb Monaten ungef\u00e4hr an. Das hat mit diesem gro\u00dfen Thema Objektorientierung zu tun. Genauso wie hier diese erste Zeile, Public Class Start, weil die Datei Start hei\u00dft, gucken wir uns alles an. Wichtig ist hier auch nat\u00fcrlich, das genauso zu schreiben wie hier, sprich mit einem Gro\u00dfbuchstaben eingel\u00e4utet. Und alles andere kl\u00e4ren wir dann irgendwann sp\u00e4ter im Laufe des Semesters. Durch diese geschweiften Klammern gebe ich immer einen Scope, also einen Umfang sozusagen an, in dem Fall der Umfang von dieser Public Class Start. Und in dieser Public Class Start haben wir hier die Main-Methode deklariert, Public Static Void Main, String Arcs. Auch das ist eine relativ sperrige Syntax, die man oder die wir im Laufe des Semesters auch verstehen werden, die aber vielleicht anfangs so ein bisschen auswendig gelernt werden muss oder vielleicht noch nicht so ganz trivial erscheint. Aber da kommen wir hin. Und innerhalb dieser Main-Methode haben wir jetzt angefangen, richtig in Anf\u00fchrungszeichen zu programmieren, also unsere ersten Sachen hinzuschreiben, die man auch schon wirklich nachvollziehen konnte, sprich einmal auf der Konsole einfach Hallo Welt ausgegeben. Wir haben dabei auch kennengelernt, was die Java-Syntax ist, beziehungsweise was eben nicht die Java-Syntax ist, also was passieren kann, wenn ich einen sogenannten Syntax-Fehler begehe. Und wir haben uns hier auch noch angeguckt, wie wir uns selber zum Beispiel Kommentare setzen k\u00f6nnen, die dann entsprechend auch vom Compiler ignoriert werden. Okay, soviel dazu. Bis zum n\u00e4chsten Mal. Doch noch nicht ganz. Ich hatte eine Kleinigkeit versprochen und am Ende des Videos gemerkt, dass ich sie nicht gezeigt habe. Und zwar hatte ich gesagt, es gibt eine neue M\u00f6glichkeit, um diese Main-Methode zu schreiben, die wie gesagt nicht vom VPL unterst\u00fctzt wird. Ich wollte es aber trotzdem einmal zeigen. Und zwar w\u00e4re die ganz einfach. Wir sparen uns den ganzen Kram, den wir gemacht haben und sagen Void Main, setzen dann runde Klammern und die geschweiften Klammern und k\u00f6nnten jetzt hier zum Beispiel System Out Print Line irgendwas hinschreiben mit einem Semikolon am Ende, speichern und das Ganze ausf\u00fchren. Das Problem ist nur, dass VPL an der Stelle sagt, dass diese unbenannten Klassen ein Vorschau-Feature sind, was standardm\u00e4\u00dfig deaktiviert ist. Also, dass wir es letzten Endes nicht in VPL nutzen k\u00f6nnen ohne weiteres und dementsprechend, ja, vielleicht sp\u00e4ter im Laufe des Semesters uns nochmal ansehen k\u00f6nnen, aber hier nicht unbedingt verwenden k\u00f6nnen.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.66, "text": " Hallo zusammen, wir schauen uns jetzt unser allererstes Java-Programm an, das hei\u00dft wir schreiben auch unseren allerersten Code.", "tokens": [50365, 21242, 14311, 11, 1987, 25672, 2693, 4354, 12977, 8722, 16398, 279, 10745, 12, 12681, 1342, 76, 364, 11, 1482, 13139, 1987, 48546, 2168, 25305, 8722, 260, 6266, 15549, 13, 50748], "temperature": 0.0, "avg_logprob": -0.09657623231873032, "compression_ratio": 1.683673469387755, "no_speech_prob": 1.1116494877394523e-11}, {"id": 1, "seek": 0, "start": 8.16, "end": 11.66, "text": " Klassischerweise hei\u00dft das dann Hello World oder auf Deutsch Hallo Welt.", "tokens": [50773, 591, 14549, 19674, 13109, 13139, 1482, 3594, 2425, 3937, 4513, 2501, 12699, 21242, 14761, 13, 50948], "temperature": 0.0, "avg_logprob": -0.09657623231873032, "compression_ratio": 1.683673469387755, "no_speech_prob": 1.1116494877394523e-11}, {"id": 2, "seek": 0, "start": 13.42, "end": 21.06, "text": " Genau, das hei\u00dft wir gucken uns heute unsere allererste Java-Datei an, beziehungsweise die sogenannte Main-Methode, was es damit auf sich hat, sehen wir sofort.", "tokens": [51036, 22340, 11, 1482, 13139, 1987, 33135, 2693, 9801, 14339, 8722, 260, 2941, 10745, 12, 35, 473, 72, 364, 11, 312, 28213, 5846, 13109, 978, 37467, 9358, 12383, 12, 44, 3293, 1429, 11, 390, 785, 9479, 2501, 3041, 2385, 11, 11333, 1987, 33168, 13, 51418], "temperature": 0.0, "avg_logprob": -0.09657623231873032, "compression_ratio": 1.683673469387755, "no_speech_prob": 1.1116494877394523e-11}, {"id": 3, "seek": 0, "start": 21.64, "end": 27.8, "text": " Und wir werden dabei sehen, was man unter sogenannter Syntax versteht, das haben wir im vorherigen Video schon mal kurz erw\u00e4hnt.", "tokens": [51447, 2719, 1987, 4604, 14967, 11333, 11, 390, 587, 8662, 36479, 969, 391, 3902, 580, 2797, 22442, 357, 11, 1482, 3084, 1987, 566, 29195, 3213, 9777, 4981, 2806, 20465, 21715, 6860, 580, 13, 51755], "temperature": 0.0, "avg_logprob": -0.09657623231873032, "compression_ratio": 1.683673469387755, "no_speech_prob": 1.1116494877394523e-11}, {"id": 4, "seek": 2780, "start": 27.8, "end": 31.66, "text": " Und eben auf der anderen Seite auch, was es mit sogenannten Syntax-Fehlern auf sich hat.", "tokens": [50365, 2719, 11375, 2501, 1163, 11122, 19748, 2168, 11, 390, 785, 2194, 37467, 14970, 3902, 580, 2797, 12, 37, 13301, 75, 1248, 2501, 3041, 2385, 13, 50558], "temperature": 0.0, "avg_logprob": -0.08068870243273284, "compression_ratio": 1.5974842767295598, "no_speech_prob": 1.5015601609325024e-11}, {"id": 5, "seek": 2780, "start": 32.5, "end": 34.22, "text": " Okay, ich w\u00fcrde sagen, wir legen direkt los.", "tokens": [50600, 1033, 11, 1893, 11942, 8360, 11, 1987, 48315, 20315, 1750, 13, 50686], "temperature": 0.0, "avg_logprob": -0.08068870243273284, "compression_ratio": 1.5974842767295598, "no_speech_prob": 1.5015601609325024e-11}, {"id": 6, "seek": 2780, "start": 34.86, "end": 42.08, "text": " Ich habe hier mal so ein kleines Demo-VPL f\u00fcr mich zum Spielen angelegt und das ist so neu, dass ich noch nicht mal irgendeine Datei erstellt habe.", "tokens": [50718, 3141, 6015, 3296, 2806, 370, 1343, 9318, 1652, 4686, 78, 12, 53, 21593, 2959, 6031, 5919, 1738, 12844, 15495, 22745, 674, 1482, 1418, 370, 22510, 11, 2658, 1893, 3514, 1979, 2806, 3418, 27429, 533, 31805, 72, 11301, 12783, 6015, 13, 51079], "temperature": 0.0, "avg_logprob": -0.08068870243273284, "compression_ratio": 1.5974842767295598, "no_speech_prob": 1.5015601609325024e-11}, {"id": 7, "seek": 2780, "start": 42.2, "end": 43.28, "text": " Das hei\u00dft, das mache ich hier sofort.", "tokens": [51085, 2846, 13139, 11, 1482, 28289, 1893, 3296, 33168, 13, 51139], "temperature": 0.0, "avg_logprob": -0.08068870243273284, "compression_ratio": 1.5974842767295598, "no_speech_prob": 1.5015601609325024e-11}, {"id": 8, "seek": 2780, "start": 43.72, "end": 50.16, "text": " Ich lege hier eine neue Java-Datei an, der schl\u00e4gt mir schon glorreiche Namen vor, die ich offenbar fr\u00fcher mal verwendet habe.", "tokens": [51161, 3141, 476, 432, 3296, 3018, 16842, 10745, 12, 35, 473, 72, 364, 11, 1163, 956, 22882, 10463, 3149, 4981, 26623, 265, 9304, 38771, 4245, 11, 978, 1893, 35253, 5356, 32349, 2806, 1306, 20128, 302, 6015, 13, 51483], "temperature": 0.0, "avg_logprob": -0.08068870243273284, "compression_ratio": 1.5974842767295598, "no_speech_prob": 1.5015601609325024e-11}, {"id": 9, "seek": 2780, "start": 50.260000000000005, "end": 53.64, "text": " Schweinsgerlok.java, super Name, machen wir jetzt nicht.", "tokens": [51488, 24343, 1292, 1321, 75, 453, 13, 73, 4061, 11, 1687, 13866, 11, 7069, 1987, 4354, 1979, 13, 51657], "temperature": 0.0, "avg_logprob": -0.08068870243273284, "compression_ratio": 1.5974842767295598, "no_speech_prob": 1.5015601609325024e-11}, {"id": 10, "seek": 5364, "start": 53.64, "end": 58.3, "text": " Ich w\u00fcrde die Datei einfach mal Start.java nennen, hatte ich auch schon mal gemacht.", "tokens": [50365, 3141, 11942, 978, 31805, 72, 7281, 2806, 6481, 13, 73, 4061, 297, 16043, 11, 13299, 1893, 2168, 4981, 2806, 12293, 13, 50598], "temperature": 0.0, "avg_logprob": -0.16646100960525811, "compression_ratio": 1.312, "no_speech_prob": 2.4480417692984702e-11}, {"id": 11, "seek": 5364, "start": 59.22, "end": 63.5, "text": " Wichtig ist nat\u00fcrlich dieses K\u00fcrzel, dieses Datei-K\u00fcrzel, Dateiendung.java.", "tokens": [50644, 343, 7334, 1418, 8762, 12113, 591, 1655, 12971, 11, 12113, 31805, 72, 12, 42, 1655, 12971, 11, 31805, 1174, 1063, 13, 73, 4061, 13, 50858], "temperature": 0.0, "avg_logprob": -0.16646100960525811, "compression_ratio": 1.312, "no_speech_prob": 2.4480417692984702e-11}, {"id": 12, "seek": 6350, "start": 63.5, "end": 83.42, "text": " Wichtig ist auch, dass ich hier die Datei mit einem gro\u00dfen Buchstaben benenne und das liegt da dran, wir m\u00fcssen hier so ein bisschen vorgreifen, ohne zu tief reinzugehen, dass ich in Java klassischerweise beginnen muss mit Public Class und dann dem Namen, den ich hier eingegeben habe.", "tokens": [50365, 343, 7334, 1418, 2168, 11, 2658, 1893, 3296, 978, 31805, 72, 2194, 6827, 23076, 25818, 372, 25071, 3271, 13295, 674, 1482, 22421, 1120, 32801, 11, 1987, 9013, 3296, 370, 1343, 10763, 4245, 33248, 25076, 11, 15716, 2164, 45100, 6561, 46285, 2932, 11, 2658, 1893, 294, 10745, 42917, 19674, 13109, 40326, 6425, 2194, 9489, 9471, 674, 3594, 1371, 38771, 11, 1441, 1893, 3296, 17002, 2828, 1799, 6015, 13, 51361], "temperature": 0.0, "avg_logprob": -0.07182624978078923, "compression_ratio": 1.4568527918781726, "no_speech_prob": 2.4117432009806983e-11}, {"id": 13, "seek": 8342, "start": 83.42, "end": 86.16, "text": " Auch hier nat\u00fcrlich Gro\u00df- und Kleinschreibung beachten, Start.", "tokens": [50365, 13382, 3296, 8762, 34534, 12, 674, 17053, 1292, 339, 38606, 1063, 312, 20806, 11, 6481, 13, 50502], "temperature": 0.0, "avg_logprob": -0.07801570892333984, "compression_ratio": 1.7740863787375416, "no_speech_prob": 2.6668002875429586e-11}, {"id": 14, "seek": 8342, "start": 86.72, "end": 89.0, "text": " Das hat mit diesem Thema Objektorientierung zu tun.", "tokens": [50530, 2846, 2385, 2194, 10975, 16306, 4075, 14930, 19521, 11651, 2164, 4267, 13, 50644], "temperature": 0.0, "avg_logprob": -0.07801570892333984, "compression_ratio": 1.7740863787375416, "no_speech_prob": 2.6668002875429586e-11}, {"id": 15, "seek": 8342, "start": 89.08, "end": 100.34, "text": " Wir erinnern uns, Java ist eine objektorientierte Programmiersprache und das ist am Anfang nat\u00fcrlich schwierig, einen Bogen, um Objektorientierung zu machen, wenn man in einer objektorientierten Programmiersprache unterwegs ist.", "tokens": [50648, 4347, 1189, 19166, 77, 2693, 11, 10745, 1418, 3018, 1111, 14930, 19521, 23123, 8338, 3057, 433, 1424, 6000, 674, 1482, 1418, 669, 25856, 8762, 37845, 11, 4891, 363, 8799, 11, 1105, 4075, 14930, 19521, 11651, 2164, 7069, 11, 4797, 587, 294, 6850, 1111, 14930, 19521, 29632, 8338, 3057, 433, 1424, 6000, 36258, 1418, 13, 51211], "temperature": 0.0, "avg_logprob": -0.07801570892333984, "compression_ratio": 1.7740863787375416, "no_speech_prob": 2.6668002875429586e-11}, {"id": 16, "seek": 8342, "start": 101.18, "end": 109.78, "text": " Deswegen geh\u00f6rt das so ein bisschen zu dem Teil der Sprache, den wir anfangs erst mal so ein bisschen akzeptieren, aber dann uns nach und nach erschlie\u00dfen im Laufe der kommenden Wochen.", "tokens": [51253, 24864, 21544, 1482, 370, 1343, 10763, 2164, 1371, 16357, 1163, 7702, 6000, 11, 1441, 1987, 364, 19134, 82, 11301, 2806, 370, 1343, 10763, 9308, 32082, 5695, 11, 4340, 3594, 2693, 5168, 674, 5168, 41673, 38665, 566, 47979, 2106, 1163, 6669, 8896, 23126, 13, 51683], "temperature": 0.0, "avg_logprob": -0.07801570892333984, "compression_ratio": 1.7740863787375416, "no_speech_prob": 2.6668002875429586e-11}, {"id": 17, "seek": 10978, "start": 109.78, "end": 125.5, "text": " Okay, nach diesem Public Class, in unserem Fall Start, weil die Datei auch Start.java hei\u00dft, setze ich geschweifte Klammern und das VPL ist hier auch schon so nett, so eine schlie\u00dfende geschweifte Klammer anzulegen, beziehungsweise hier auch so ein bisschen einzur\u00fccken.", "tokens": [50365, 1033, 11, 5168, 10975, 9489, 9471, 11, 294, 26792, 7465, 6481, 11, 7689, 978, 31805, 72, 2168, 6481, 13, 73, 4061, 13139, 11, 992, 1381, 1893, 13511, 826, 351, 975, 591, 4326, 44243, 674, 1482, 691, 21593, 1418, 3296, 2168, 4981, 370, 42084, 11, 370, 3018, 956, 24476, 5445, 13511, 826, 351, 975, 591, 4326, 936, 364, 89, 2271, 1766, 11, 312, 28213, 5846, 13109, 3296, 2168, 370, 1343, 10763, 21586, 374, 26037, 13, 51151], "temperature": 0.0, "avg_logprob": -0.06719428037120177, "compression_ratio": 1.6746987951807228, "no_speech_prob": 2.8354207870506798e-11}, {"id": 18, "seek": 10978, "start": 126.04, "end": 133.68, "text": " In diesen geschweiften Klammern steht sozusagen ein Scope, ein Umfang sozusagen, das w\u00e4re jetzt hier der Umfang von dieser Public Class Start.", "tokens": [51178, 682, 12862, 13511, 826, 351, 1147, 591, 4326, 44243, 16361, 33762, 1343, 2747, 1114, 11, 1343, 3301, 19134, 33762, 11, 1482, 14558, 4354, 3296, 1163, 3301, 19134, 2957, 9053, 9489, 9471, 6481, 13, 51560], "temperature": 0.0, "avg_logprob": -0.06719428037120177, "compression_ratio": 1.6746987951807228, "no_speech_prob": 2.8354207870506798e-11}, {"id": 19, "seek": 13368, "start": 133.68, "end": 146.38, "text": " Wie gesagt, das hinterfragen wir jetzt erst mal gar nicht so sehr und hier k\u00f6nnen wir jetzt den Startpunkt von unserem Java-Code anlegen oder festlegen und das w\u00e4re die sogenannte Main-Methode.", "tokens": [50365, 9233, 12260, 11, 1482, 23219, 69, 20663, 1987, 4354, 11301, 2806, 3691, 1979, 370, 5499, 674, 3296, 6310, 1987, 4354, 1441, 6481, 31744, 2957, 26792, 10745, 12, 34, 1429, 364, 22936, 4513, 6633, 22936, 674, 1482, 14558, 978, 37467, 9358, 12383, 12, 44, 3293, 1429, 13, 51000], "temperature": 0.0, "avg_logprob": -0.06344559852113114, "compression_ratio": 1.502145922746781, "no_speech_prob": 2.4785173913244307e-11}, {"id": 20, "seek": 13368, "start": 146.48000000000002, "end": 154.18, "text": " Hier gibt es, sage ich mal, die klassische veraltete Syntax, wenn man so will oder immer noch g\u00fcltige Syntax, aber die, die es schon immer gab sozusagen.", "tokens": [51005, 10886, 6089, 785, 11, 19721, 1893, 2806, 11, 978, 42917, 7864, 1306, 3198, 3498, 3902, 580, 2797, 11, 4797, 587, 370, 486, 4513, 5578, 3514, 18148, 2282, 3969, 3902, 580, 2797, 11, 4340, 978, 11, 978, 785, 4981, 5578, 17964, 33762, 13, 51390], "temperature": 0.0, "avg_logprob": -0.06344559852113114, "compression_ratio": 1.502145922746781, "no_speech_prob": 2.4785173913244307e-11}, {"id": 21, "seek": 15418, "start": 154.18, "end": 161.36, "text": " Es gibt inzwischen auch in neueren Java-Versionen eine neue Syntax, um die Main-Methode zu schreiben.", "tokens": [50365, 2313, 6089, 294, 47115, 2168, 294, 22510, 5170, 10745, 12, 53, 433, 17068, 3018, 16842, 3902, 580, 2797, 11, 1105, 978, 12383, 12, 44, 3293, 1429, 2164, 48546, 13, 50724], "temperature": 0.0, "avg_logprob": -0.038347415363087375, "compression_ratio": 1.4615384615384615, "no_speech_prob": 2.4104388623991113e-11}, {"id": 22, "seek": 15418, "start": 161.72, "end": 175.32, "text": " Das Problem ist nur, dass das im VPL nicht funktioniert, weil man daf\u00fcr, weil diese neue Syntax so ein experimentelles Release ist oder so \u00e4hnlich wird das genannt von Java und das VPL das einfach noch nicht akzeptiert.", "tokens": [50742, 2846, 11676, 1418, 4343, 11, 2658, 1482, 566, 691, 21593, 1979, 26160, 11, 7689, 587, 13747, 11, 7689, 6705, 16842, 3902, 580, 2797, 370, 1343, 5120, 19787, 34278, 1418, 4513, 370, 49696, 4578, 1482, 1049, 39878, 2957, 10745, 674, 1482, 691, 21593, 1482, 7281, 3514, 1979, 9308, 32082, 4859, 13, 51422], "temperature": 0.0, "avg_logprob": -0.038347415363087375, "compression_ratio": 1.4615384615384615, "no_speech_prob": 2.4104388623991113e-11}, {"id": 23, "seek": 17532, "start": 175.32, "end": 184.57999999999998, "text": " Das hei\u00dft, hier zeige ich jetzt einmal die klassische, immer g\u00fcltige sozusagen Variante, um die Main-Methode zu schreiben, das hei\u00dft den Einstieg in unser Java-Programm.", "tokens": [50365, 2846, 13139, 11, 3296, 5277, 3969, 1893, 4354, 11078, 978, 42917, 7864, 11, 5578, 18148, 2282, 3969, 33762, 32511, 2879, 11, 1105, 978, 12383, 12, 44, 3293, 1429, 2164, 48546, 11, 1482, 13139, 1441, 6391, 372, 20408, 294, 12977, 10745, 12, 12681, 1342, 76, 13, 50828], "temperature": 0.0, "avg_logprob": -0.07971239912098851, "compression_ratio": 1.5376344086021505, "no_speech_prob": 3.0298329817268765e-11}, {"id": 24, "seek": 17532, "start": 185.06, "end": 192.88, "text": " Hier sto\u00dfen wir jetzt auch wieder auf so ein paar Begriffe, die wir erst mal ein bisschen ignorieren und ausklammern und uns dann im Laufe des Semesters erschlie\u00dfen.", "tokens": [50852, 10886, 22784, 8989, 1987, 4354, 2168, 6216, 2501, 370, 1343, 16509, 879, 861, 31387, 11, 978, 1987, 11301, 2806, 1343, 10763, 14698, 5695, 674, 3437, 74, 4326, 44243, 674, 2693, 3594, 566, 47979, 2106, 730, 14421, 38561, 41673, 38665, 13, 51243], "temperature": 0.0, "avg_logprob": -0.07971239912098851, "compression_ratio": 1.5376344086021505, "no_speech_prob": 3.0298329817268765e-11}, {"id": 25, "seek": 17532, "start": 193.5, "end": 199.92, "text": " Und zwar sage ich Public Static Void Main. Main ist der Name, also der Name der Methode.", "tokens": [51274, 2719, 19054, 19721, 1893, 9489, 745, 2399, 7518, 327, 12383, 13, 12383, 1418, 1163, 13866, 11, 611, 1163, 13866, 1163, 48602, 1429, 13, 51595], "temperature": 0.0, "avg_logprob": -0.07971239912098851, "compression_ratio": 1.5376344086021505, "no_speech_prob": 3.0298329817268765e-11}, {"id": 26, "seek": 19992, "start": 199.92, "end": 211.56, "text": " Die Main-Methode hei\u00dft Main. Und dann setze ich runde Klammern und sage String, eckige Klammern, \u00f6ffnendes und schlie\u00dfende eckige Klammern, Arcs.", "tokens": [50365, 3229, 12383, 12, 44, 3293, 1429, 13139, 12383, 13, 2719, 3594, 992, 1381, 1893, 367, 13271, 591, 4326, 44243, 674, 19721, 745, 2937, 11, 308, 547, 3969, 591, 4326, 44243, 11, 4044, 602, 77, 34533, 674, 956, 24476, 5445, 308, 547, 3969, 591, 4326, 44243, 11, 1587, 14368, 13, 50947], "temperature": 0.0, "avg_logprob": -0.07501189190408458, "compression_ratio": 1.7740384615384615, "no_speech_prob": 2.7620851786314127e-11}, {"id": 27, "seek": 19992, "start": 212.16, "end": 222.79999999999998, "text": " Und auch hier nach diesem langen Satzgef\u00fchl, den ich hier hingeschrieben habe, setze ich wieder geschweifte Klammern oder eine geschweifte Klammer und kriege hier so eine schlie\u00dfende geschweifte Klammer direkt erkannt.", "tokens": [50977, 2719, 2168, 3296, 5168, 10975, 2265, 268, 5344, 89, 13529, 21692, 11, 1441, 1893, 3296, 24895, 22320, 24027, 6015, 11, 992, 1381, 1893, 6216, 13511, 826, 351, 975, 591, 4326, 44243, 4513, 3018, 13511, 826, 351, 975, 591, 4326, 936, 674, 25766, 432, 3296, 370, 3018, 956, 24476, 5445, 13511, 826, 351, 975, 591, 4326, 936, 20315, 1189, 29680, 13, 51509], "temperature": 0.0, "avg_logprob": -0.07501189190408458, "compression_ratio": 1.7740384615384615, "no_speech_prob": 2.7620851786314127e-11}, {"id": 28, "seek": 22280, "start": 222.8, "end": 234.48000000000002, "text": " Das ist der Start unserer Java-Anwendung. Wie gesagt, es gibt noch eine neuere Syntax, die akzeptiert das VPL aber nicht, kann ich gerne sp\u00e4ter nochmal ganz kurz zeigen.", "tokens": [50365, 2846, 1418, 1163, 6481, 20965, 10745, 12, 7828, 20128, 1063, 13, 9233, 12260, 11, 785, 6089, 3514, 3018, 22510, 323, 3902, 580, 2797, 11, 978, 9308, 32082, 4859, 1482, 691, 21593, 4340, 1979, 11, 4028, 1893, 15689, 24196, 26509, 6312, 20465, 24687, 13, 50949], "temperature": 0.0, "avg_logprob": -0.06056519834006705, "compression_ratio": 1.4594594594594594, "no_speech_prob": 1.9396224210099788e-11}, {"id": 29, "seek": 22280, "start": 235.34, "end": 242.52, "text": " Jetzt m\u00f6chte ich aber auch nat\u00fcrlich irgendwas sehen. Ich kann hier die Datei speichern und die Datei ausf\u00fchren, sehe aber nat\u00fcrlich noch nicht viel.", "tokens": [50992, 12592, 14570, 1893, 4340, 2168, 8762, 47090, 11333, 13, 3141, 4028, 3296, 978, 31805, 72, 768, 480, 1248, 674, 978, 31805, 72, 3437, 69, 29540, 11, 35995, 4340, 8762, 3514, 1979, 5891, 13, 51351], "temperature": 0.0, "avg_logprob": -0.06056519834006705, "compression_ratio": 1.4594594594594594, "no_speech_prob": 1.9396224210099788e-11}, {"id": 30, "seek": 24252, "start": 242.52, "end": 249.44, "text": " Das hei\u00dft, was ich hier einmal machen m\u00f6chte, ist irgendeinen Text auf diesem schwarzen Fenster, was wir gerade gesehen haben, auf der Konsole auszugeben.", "tokens": [50365, 2846, 13139, 11, 390, 1893, 3296, 11078, 7069, 14570, 11, 1418, 3418, 27429, 5636, 18643, 2501, 10975, 956, 6925, 2904, 30993, 3120, 11, 390, 1987, 12117, 21535, 3084, 11, 2501, 1163, 12718, 9481, 3437, 46285, 1799, 13, 50711], "temperature": 0.0, "avg_logprob": -0.09170043251731179, "compression_ratio": 1.5019607843137255, "no_speech_prob": 2.5406272571859567e-11}, {"id": 31, "seek": 24252, "start": 249.8, "end": 261.0, "text": " Und daf\u00fcr schreibe ich System.out.println. Runde Klammern. Nach diesen runden Klammern ein Semikolon.", "tokens": [50729, 2719, 13747, 956, 10271, 650, 1893, 8910, 13, 346, 13, 14030, 75, 77, 13, 497, 13271, 591, 4326, 44243, 13, 11815, 12862, 367, 10028, 591, 4326, 44243, 1343, 14421, 1035, 38780, 13, 51289], "temperature": 0.0, "avg_logprob": -0.09170043251731179, "compression_ratio": 1.5019607843137255, "no_speech_prob": 2.5406272571859567e-11}, {"id": 32, "seek": 24252, "start": 261.12, "end": 269.52, "text": " Das ist wichtig, in Java ein Statement, also sowas wie eine Anweisung letzten Endes, durch so ein Semikolon abzuschlie\u00dfen.", "tokens": [51295, 2846, 1418, 13621, 11, 294, 10745, 1343, 16249, 1712, 11, 611, 19766, 296, 3355, 3018, 1107, 35033, 1063, 18226, 6967, 279, 11, 7131, 370, 1343, 14421, 1035, 38780, 410, 16236, 339, 38665, 13, 51715], "temperature": 0.0, "avg_logprob": -0.09170043251731179, "compression_ratio": 1.5019607843137255, "no_speech_prob": 2.5406272571859567e-11}, {"id": 33, "seek": 26952, "start": 269.52, "end": 276.79999999999995, "text": " Und in die runde Klammern kann ich jetzt den Text mit Anf\u00fchrungszeichen schreiben, den ich gerne auf meiner Konsole sehen w\u00fcrde.", "tokens": [50365, 2719, 294, 978, 367, 13271, 591, 4326, 44243, 4028, 1893, 4354, 1441, 18643, 2194, 1107, 29189, 5846, 1381, 18613, 48546, 11, 1441, 1893, 15689, 2501, 20529, 12718, 9481, 11333, 11942, 13, 50729], "temperature": 0.0, "avg_logprob": -0.07631181535266694, "compression_ratio": 1.4929577464788732, "no_speech_prob": 2.4339119261695963e-11}, {"id": 34, "seek": 26952, "start": 276.9, "end": 286.02, "text": " Und wir hatten ja schon auf der ersten Folie stehen Hallo Welt, also \u00fcbernehme ich das jetzt einfach mal, speichere die Datei, f\u00fchre das Ganze aus und sehe jetzt hier Hallo Welt.", "tokens": [50734, 2719, 1987, 20441, 2784, 4981, 2501, 1163, 17324, 15255, 414, 19777, 21242, 14761, 11, 611, 4502, 30540, 1398, 1893, 1482, 4354, 7281, 2806, 11, 768, 480, 323, 978, 31805, 72, 11, 18813, 265, 1482, 35206, 3437, 674, 35995, 4354, 3296, 21242, 14761, 13, 51190], "temperature": 0.0, "avg_logprob": -0.07631181535266694, "compression_ratio": 1.4929577464788732, "no_speech_prob": 2.4339119261695963e-11}, {"id": 35, "seek": 26952, "start": 286.5, "end": 286.7, "text": " Super.", "tokens": [51214, 4548, 13, 51224], "temperature": 0.0, "avg_logprob": -0.07631181535266694, "compression_ratio": 1.4929577464788732, "no_speech_prob": 2.4339119261695963e-11}, {"id": 36, "seek": 28670, "start": 286.7, "end": 292.9, "text": " Wir haben jetzt hier bei diesem System.out.println stehen.", "tokens": [50365, 4347, 3084, 4354, 3296, 4643, 10975, 8910, 13, 346, 13, 14030, 75, 77, 19777, 13, 50675], "temperature": 0.0, "avg_logprob": -0.08247038375499637, "compression_ratio": 1.4405286343612336, "no_speech_prob": 2.7256698634237075e-11}, {"id": 37, "seek": 28670, "start": 293.14, "end": 298.76, "text": " Das sorgt daf\u00fcr, dass wir automatisch, nachdem dieser Text auf der Konsole ausgegeben wird, so einen Zeilenumbruch haben.", "tokens": [50687, 2846, 262, 36698, 13747, 11, 2658, 1987, 28034, 5494, 11, 5168, 10730, 9053, 18643, 2501, 1163, 12718, 9481, 31899, 16702, 4578, 11, 370, 4891, 4853, 17471, 449, 1443, 625, 3084, 13, 50968], "temperature": 0.0, "avg_logprob": -0.08247038375499637, "compression_ratio": 1.4405286343612336, "no_speech_prob": 2.7256698634237075e-11}, {"id": 38, "seek": 28670, "start": 298.86, "end": 308.46, "text": " Das hei\u00dft, wenn ich mir das jetzt einfach mal kopiere und nochmal aus einf\u00fcge und hier dann vielleicht sage Hallo Brock 1 in der zweiten Zeile,", "tokens": [50973, 2846, 13139, 11, 4797, 1893, 3149, 1482, 4354, 7281, 2806, 28920, 14412, 674, 26509, 3437, 38627, 774, 432, 674, 3296, 3594, 12547, 19721, 21242, 32093, 502, 294, 1163, 39943, 4853, 794, 11, 51453], "temperature": 0.0, "avg_logprob": -0.08247038375499637, "compression_ratio": 1.4405286343612336, "no_speech_prob": 2.7256698634237075e-11}, {"id": 39, "seek": 30846, "start": 308.46, "end": 314.02, "text": " hier w\u00fcrden die Texte direkt untereinander ausgegeben werden.", "tokens": [50365, 3296, 27621, 978, 18643, 68, 20315, 1701, 323, 20553, 31899, 16702, 4604, 13, 50643], "temperature": 0.0, "avg_logprob": -0.13328380375118046, "compression_ratio": 1.4892703862660943, "no_speech_prob": 2.4278424756718486e-11}, {"id": 40, "seek": 30846, "start": 314.73999999999995, "end": 321.68, "text": " Es gibt auch noch die M\u00f6glichkeit, hier dieses ln wegzulassen und dann eben entsprechend keinen Zeilenumbruch zu haben.", "tokens": [50679, 2313, 6089, 2168, 3514, 978, 30662, 11, 3296, 12113, 44166, 15565, 89, 425, 8356, 674, 3594, 11375, 47823, 20624, 4853, 17471, 449, 1443, 625, 2164, 3084, 13, 51026], "temperature": 0.0, "avg_logprob": -0.13328380375118046, "compression_ratio": 1.4892703862660943, "no_speech_prob": 2.4278424756718486e-11}, {"id": 41, "seek": 30846, "start": 321.78, "end": 323.59999999999997, "text": " Das hei\u00dft, die Texte w\u00fcrden nebeneinander gezeigt werden.", "tokens": [51031, 2846, 13139, 11, 978, 18643, 68, 27621, 408, 41605, 20553, 48661, 4604, 13, 51122], "temperature": 0.0, "avg_logprob": -0.13328380375118046, "compression_ratio": 1.4892703862660943, "no_speech_prob": 2.4278424756718486e-11}, {"id": 42, "seek": 30846, "start": 324.46, "end": 324.65999999999997, "text": " Okay.", "tokens": [51165, 1033, 13, 51175], "temperature": 0.0, "avg_logprob": -0.13328380375118046, "compression_ratio": 1.4892703862660943, "no_speech_prob": 2.4278424756718486e-11}, {"id": 43, "seek": 30846, "start": 325.2, "end": 325.88, "text": " So viel dazu.", "tokens": [51202, 407, 5891, 13034, 13, 51236], "temperature": 0.0, "avg_logprob": -0.13328380375118046, "compression_ratio": 1.4892703862660943, "no_speech_prob": 2.4278424756718486e-11}, {"id": 44, "seek": 30846, "start": 326.28, "end": 331.34, "text": " Wir haben nat\u00fcrlich bis jetzt sinnvollerweise nur g\u00fcltigen Java-Code geschrieben.", "tokens": [51256, 4347, 3084, 8762, 7393, 4354, 47066, 20654, 44071, 4343, 18148, 2282, 3213, 10745, 12, 34, 1429, 47397, 13, 51509], "temperature": 0.0, "avg_logprob": -0.13328380375118046, "compression_ratio": 1.4892703862660943, "no_speech_prob": 2.4278424756718486e-11}, {"id": 45, "seek": 33134, "start": 331.34, "end": 334.59999999999997, "text": " Das hei\u00dft, wir haben der Java-Syntax gefolgt.", "tokens": [50365, 2846, 13139, 11, 1987, 3084, 1163, 10745, 12, 50, 88, 580, 2797, 1519, 7082, 10463, 13, 50528], "temperature": 0.0, "avg_logprob": -0.08104628171676244, "compression_ratio": 1.6773162939297124, "no_speech_prob": 2.5321696128788318e-11}, {"id": 46, "seek": 33134, "start": 334.7, "end": 343.96, "text": " Die Java-Syntax oder die Syntax der Programmiersprache Java legt fest, welchen Aufbau so ein Programm haben soll, was g\u00fcltige Zeichen sind und so weiter und so fort.", "tokens": [50533, 3229, 10745, 12, 50, 88, 580, 2797, 4513, 978, 3902, 580, 2797, 1163, 8338, 3057, 433, 1424, 6000, 10745, 1676, 83, 6633, 11, 2214, 2470, 9462, 26820, 370, 1343, 48244, 3084, 7114, 11, 390, 18148, 2282, 3969, 4853, 18613, 3290, 674, 370, 8988, 674, 370, 5009, 13, 50996], "temperature": 0.0, "avg_logprob": -0.08104628171676244, "compression_ratio": 1.6773162939297124, "no_speech_prob": 2.5321696128788318e-11}, {"id": 47, "seek": 33134, "start": 344.35999999999996, "end": 350.03999999999996, "text": " Das hei\u00dft, wenn ich jetzt hier zum Beispiel einmal auf der Tastatur ausrutsche, die Datei speichere und dann versuche auszuf\u00fchren,", "tokens": [51016, 2846, 13139, 11, 4797, 1893, 4354, 3296, 5919, 13772, 11078, 2501, 1163, 314, 525, 19493, 3437, 81, 3648, 1876, 11, 978, 31805, 72, 768, 480, 323, 674, 3594, 1774, 17545, 3437, 39467, 29540, 11, 51300], "temperature": 0.0, "avg_logprob": -0.08104628171676244, "compression_ratio": 1.6773162939297124, "no_speech_prob": 2.5321696128788318e-11}, {"id": 48, "seek": 33134, "start": 350.94, "end": 353.55999999999995, "text": " dann wird es hier hei\u00dfen, beim Kompilieren ist ein Fehler aufgetreten.", "tokens": [51345, 3594, 4578, 785, 3296, 39124, 268, 11, 13922, 591, 8586, 388, 5695, 1418, 1343, 48101, 2501, 847, 35383, 13, 51476], "temperature": 0.0, "avg_logprob": -0.08104628171676244, "compression_ratio": 1.6773162939297124, "no_speech_prob": 2.5321696128788318e-11}, {"id": 49, "seek": 33134, "start": 353.71999999999997, "end": 359.53999999999996, "text": " Dieses fsd, was auch immer ich da gerade reingehauen habe, ist irgendwas, womit Java nichts anfangen kann.", "tokens": [51484, 39201, 283, 82, 67, 11, 390, 2168, 5578, 1893, 1120, 12117, 319, 8735, 71, 11715, 6015, 11, 1418, 47090, 11, 1579, 270, 10745, 13004, 33709, 10784, 4028, 13, 51775], "temperature": 0.0, "avg_logprob": -0.08104628171676244, "compression_ratio": 1.6773162939297124, "no_speech_prob": 2.5321696128788318e-11}, {"id": 50, "seek": 35954, "start": 359.54, "end": 362.16, "text": " Und dementsprechend kann der Code nicht kompilieren.", "tokens": [50365, 2719, 368, 1117, 22895, 521, 4028, 1163, 15549, 1979, 5207, 79, 388, 5695, 13, 50496], "temperature": 0.0, "avg_logprob": -0.06292396827980325, "compression_ratio": 1.6265822784810127, "no_speech_prob": 3.2551784184819965e-11}, {"id": 51, "seek": 35954, "start": 362.92, "end": 364.70000000000005, "text": " Das sieht jetzt nat\u00fcrlich relativ logisch aus.", "tokens": [50534, 2846, 14289, 4354, 8762, 21960, 3565, 5494, 3437, 13, 50623], "temperature": 0.0, "avg_logprob": -0.06292396827980325, "compression_ratio": 1.6265822784810127, "no_speech_prob": 3.2551784184819965e-11}, {"id": 52, "seek": 35954, "start": 364.88, "end": 371.12, "text": " Wir hatten vorhin gesagt, das ist so ein ganz, ganz klassischer Fall, der einem auch sp\u00e4ter in der Programmierung immer nochmal passieren kann,", "tokens": [50632, 4347, 20441, 4245, 10876, 12260, 11, 1482, 1418, 370, 1343, 6312, 11, 6312, 42917, 19674, 7465, 11, 1163, 6827, 2168, 24196, 294, 1163, 48244, 11651, 5578, 26509, 46223, 4028, 11, 50944], "temperature": 0.0, "avg_logprob": -0.06292396827980325, "compression_ratio": 1.6265822784810127, "no_speech_prob": 3.2551784184819965e-11}, {"id": 53, "seek": 35954, "start": 371.20000000000005, "end": 376.98, "text": " dass man zum Beispiel so ein Semikolon vergisst, was dann nat\u00fcrlich auch keine g\u00fcltige Java-Syntax mehr eigentlich ist.", "tokens": [50948, 2658, 587, 5919, 13772, 370, 1343, 14421, 1035, 38780, 20209, 45802, 11, 390, 3594, 8762, 2168, 9252, 18148, 2282, 3969, 10745, 12, 50, 88, 580, 2797, 5417, 10926, 1418, 13, 51237], "temperature": 0.0, "avg_logprob": -0.06292396827980325, "compression_ratio": 1.6265822784810127, "no_speech_prob": 3.2551784184819965e-11}, {"id": 54, "seek": 35954, "start": 377.06, "end": 382.90000000000003, "text": " Also ich muss nicht auf der Tastatur ausrutschen, um sozusagen was zu machen, was nicht von Java kompiliert werden kann.", "tokens": [51241, 2743, 1893, 6425, 1979, 2501, 1163, 314, 525, 19493, 3437, 81, 3648, 2470, 11, 1105, 33762, 390, 2164, 7069, 11, 390, 1979, 2957, 10745, 5207, 79, 388, 4859, 4604, 4028, 13, 51533], "temperature": 0.0, "avg_logprob": -0.06292396827980325, "compression_ratio": 1.6265822784810127, "no_speech_prob": 3.2551784184819965e-11}, {"id": 55, "seek": 35954, "start": 383.48, "end": 384.26, "text": " Wir probieren es mal aus.", "tokens": [51562, 4347, 1239, 5695, 785, 2806, 3437, 13, 51601], "temperature": 0.0, "avg_logprob": -0.06292396827980325, "compression_ratio": 1.6265822784810127, "no_speech_prob": 3.2551784184819965e-11}, {"id": 56, "seek": 38426, "start": 384.26, "end": 390.21999999999997, "text": " Ich habe jetzt hier, wie gesagt, so ein Semikolon gel\u00f6scht und w\u00fcrde auch hier angezeigt bekommen,", "tokens": [50365, 3141, 6015, 4354, 3296, 11, 3355, 12260, 11, 370, 1343, 14421, 1035, 38780, 4087, 11310, 4701, 674, 11942, 2168, 3296, 15495, 39869, 19256, 11, 50663], "temperature": 0.0, "avg_logprob": -0.08908783762078536, "compression_ratio": 1.5625, "no_speech_prob": 2.6026972244075353e-11}, {"id": 57, "seek": 38426, "start": 390.34, "end": 396.3, "text": " dass eben eigentlich so ein Semikolon an der Stelle erwartet worden w\u00e4re und dass der Code deswegen nicht so, wie wir es vorhin hatten,", "tokens": [50669, 2658, 11375, 10926, 370, 1343, 14421, 1035, 38780, 364, 1163, 26629, 21715, 32347, 14054, 14558, 674, 2658, 1163, 15549, 26482, 1979, 370, 11, 3355, 1987, 785, 4245, 10876, 20441, 11, 50967], "temperature": 0.0, "avg_logprob": -0.08908783762078536, "compression_ratio": 1.5625, "no_speech_prob": 2.6026972244075353e-11}, {"id": 58, "seek": 38426, "start": 396.4, "end": 398.4, "text": " in so diesem schicken schwarzen Fenster gestartet wird.", "tokens": [50972, 294, 370, 10975, 956, 3830, 956, 6925, 2904, 30993, 3120, 7219, 32347, 4578, 13, 51072], "temperature": 0.0, "avg_logprob": -0.08908783762078536, "compression_ratio": 1.5625, "no_speech_prob": 2.6026972244075353e-11}, {"id": 59, "seek": 38426, "start": 399.28, "end": 399.5, "text": " Okay.", "tokens": [51116, 1033, 13, 51127], "temperature": 0.0, "avg_logprob": -0.08908783762078536, "compression_ratio": 1.5625, "no_speech_prob": 2.6026972244075353e-11}, {"id": 60, "seek": 38426, "start": 400.28, "end": 401.98, "text": " Also nehmen wir dieses Semikolon gerne hin.", "tokens": [51166, 2743, 19905, 1987, 12113, 14421, 1035, 38780, 15689, 14102, 13, 51251], "temperature": 0.0, "avg_logprob": -0.08908783762078536, "compression_ratio": 1.5625, "no_speech_prob": 2.6026972244075353e-11}, {"id": 61, "seek": 38426, "start": 402.52, "end": 408.56, "text": " Eine Sache, die ich abschlie\u00dfend noch zeigen m\u00f6chte, ist ein Kommentar in Java.", "tokens": [51278, 17664, 31452, 11, 978, 1893, 1950, 339, 24476, 521, 3514, 24687, 14570, 11, 1418, 1343, 33708, 289, 294, 10745, 13, 51580], "temperature": 0.0, "avg_logprob": -0.08908783762078536, "compression_ratio": 1.5625, "no_speech_prob": 2.6026972244075353e-11}, {"id": 62, "seek": 40856, "start": 408.56, "end": 415.3, "text": " Wir haben jetzt einmal sch\u00f6n was auf der Konsole ausgegeben, also in diesem schwarzen Fenster, was erscheint, wird in unserem Fall Hallo Welt angezeigt.", "tokens": [50365, 4347, 3084, 4354, 11078, 13527, 390, 2501, 1163, 12718, 9481, 31899, 16702, 11, 611, 294, 10975, 956, 6925, 2904, 30993, 3120, 11, 390, 33743, 1876, 686, 11, 4578, 294, 26792, 7465, 21242, 14761, 15495, 39869, 13, 50702], "temperature": 0.0, "avg_logprob": -0.0903287410736084, "compression_ratio": 1.6516129032258065, "no_speech_prob": 2.934362822171188e-11}, {"id": 63, "seek": 40856, "start": 415.4, "end": 416.92, "text": " Ich habe dieses Hallo Probe 1 wieder gel\u00f6scht.", "tokens": [50707, 3141, 6015, 12113, 21242, 1705, 650, 502, 6216, 4087, 11310, 4701, 13, 50783], "temperature": 0.0, "avg_logprob": -0.0903287410736084, "compression_ratio": 1.6516129032258065, "no_speech_prob": 2.934362822171188e-11}, {"id": 64, "seek": 40856, "start": 418.0, "end": 423.06, "text": " Jetzt kann es nat\u00fcrlich sein, dass ich mir zum Beispiel ranschreiben m\u00f6chte, was dieser Code hier macht.", "tokens": [50837, 12592, 4028, 785, 8762, 6195, 11, 2658, 1893, 3149, 5919, 13772, 33481, 339, 25946, 14570, 11, 390, 9053, 15549, 3296, 10857, 13, 51090], "temperature": 0.0, "avg_logprob": -0.0903287410736084, "compression_ratio": 1.6516129032258065, "no_speech_prob": 2.934362822171188e-11}, {"id": 65, "seek": 40856, "start": 424.08, "end": 428.66, "text": " Und da gibt es die M\u00f6glichkeit in Java, es gibt verschiedene M\u00f6glichkeiten f\u00fcr Kommentare,", "tokens": [51141, 2719, 1120, 6089, 785, 978, 30662, 294, 10745, 11, 785, 6089, 35411, 42627, 2959, 46203, 11, 51370], "temperature": 0.0, "avg_logprob": -0.0903287410736084, "compression_ratio": 1.6516129032258065, "no_speech_prob": 2.934362822171188e-11}, {"id": 66, "seek": 40856, "start": 428.8, "end": 433.12, "text": " aber ich zeige jetzt erstmal die hier, die ich auch pers\u00f6nlich eigentlich f\u00fcr eine ziemlich einfache halte,", "tokens": [51377, 4340, 1893, 5277, 3969, 4354, 38607, 978, 3296, 11, 978, 1893, 2168, 42699, 10926, 2959, 3018, 28901, 38627, 6000, 7523, 975, 11, 51593], "temperature": 0.0, "avg_logprob": -0.0903287410736084, "compression_ratio": 1.6516129032258065, "no_speech_prob": 2.934362822171188e-11}, {"id": 67, "seek": 43312, "start": 433.12, "end": 440.6, "text": " nehme ich zwei solche Slashes und dann hier hinschreiben, was auch immer dieser Code gibt.", "tokens": [50365, 48276, 1893, 12002, 29813, 6187, 12808, 674, 3594, 3296, 276, 1292, 339, 25946, 11, 390, 2168, 5578, 9053, 15549, 6089, 13, 50739], "temperature": 0.0, "avg_logprob": -0.16901574532190958, "compression_ratio": 1.486842105263158, "no_speech_prob": 2.88444511331587e-11}, {"id": 68, "seek": 43312, "start": 442.12, "end": 447.28000000000003, "text": " Hallo Welt auf der Konsole aus.", "tokens": [50815, 21242, 14761, 2501, 1163, 12718, 9481, 3437, 13, 51073], "temperature": 0.0, "avg_logprob": -0.16901574532190958, "compression_ratio": 1.486842105263158, "no_speech_prob": 2.88444511331587e-11}, {"id": 69, "seek": 43312, "start": 447.94, "end": 450.42, "text": " Und dieser Kommentar hier, der ist jetzt nur f\u00fcr mich.", "tokens": [51106, 2719, 9053, 33708, 289, 3296, 11, 1163, 1418, 4354, 4343, 2959, 6031, 13, 51230], "temperature": 0.0, "avg_logprob": -0.16901574532190958, "compression_ratio": 1.486842105263158, "no_speech_prob": 2.88444511331587e-11}, {"id": 70, "seek": 43312, "start": 450.66, "end": 456.32, "text": " Das hei\u00dft, wenn ich jetzt den Code speichere und ausf\u00fchre, zeigt jetzt hier immer noch so ein rotes X,", "tokens": [51242, 2846, 13139, 11, 4797, 1893, 4354, 1441, 15549, 768, 480, 323, 674, 3437, 69, 7254, 265, 11, 29250, 4354, 3296, 5578, 3514, 370, 1343, 4297, 279, 1783, 11, 51525], "temperature": 0.0, "avg_logprob": -0.16901574532190958, "compression_ratio": 1.486842105263158, "no_speech_prob": 2.88444511331587e-11}, {"id": 71, "seek": 43312, "start": 456.54, "end": 458.98, "text": " aber es liegt an der VPL, die war ein bisschen langsam.", "tokens": [51536, 4340, 785, 22421, 364, 1163, 691, 21593, 11, 978, 1516, 1343, 10763, 39597, 13, 51658], "temperature": 0.0, "avg_logprob": -0.16901574532190958, "compression_ratio": 1.486842105263158, "no_speech_prob": 2.88444511331587e-11}, {"id": 72, "seek": 45898, "start": 458.98, "end": 465.6, "text": " Deswegen sehe ich nat\u00fcrlich immer noch Hallo Welt, aber habe mir hier so einen kleinen Kommentar angeschrieben.", "tokens": [50365, 24864, 35995, 1893, 8762, 5578, 3514, 21242, 14761, 11, 4340, 6015, 3149, 3296, 370, 4891, 26512, 33708, 289, 2562, 22320, 24027, 13, 50696], "temperature": 0.0, "avg_logprob": -0.12409333508424085, "compression_ratio": 1.5517241379310345, "no_speech_prob": 2.427699187512733e-11}, {"id": 73, "seek": 45898, "start": 465.76, "end": 469.02000000000004, "text": " Und der Kommentar ist ein Kommentar.", "tokens": [50704, 2719, 1163, 33708, 289, 1418, 1343, 33708, 289, 13, 50867], "temperature": 0.0, "avg_logprob": -0.12409333508424085, "compression_ratio": 1.5517241379310345, "no_speech_prob": 2.427699187512733e-11}, {"id": 74, "seek": 45898, "start": 469.24, "end": 474.32, "text": " Das hei\u00dft, hier ist nat\u00fcrlich keine Java-Syntax mehr erfordert, sondern das ist sozusagen eine Information f\u00fcr mich,", "tokens": [50878, 2846, 13139, 11, 3296, 1418, 8762, 9252, 10745, 12, 50, 88, 580, 2797, 5417, 1189, 7404, 911, 11, 11465, 1482, 1418, 33762, 3018, 15357, 2959, 6031, 11, 51132], "temperature": 0.0, "avg_logprob": -0.12409333508424085, "compression_ratio": 1.5517241379310345, "no_speech_prob": 2.427699187512733e-11}, {"id": 75, "seek": 45898, "start": 474.40000000000003, "end": 477.86, "text": " die ich mir reinschreibe, um zum Beispiel meinen Code irgendwie besser nachvollziehen zu k\u00f6nnen.", "tokens": [51136, 978, 1893, 3149, 47200, 339, 10271, 650, 11, 1105, 5919, 13772, 22738, 15549, 20759, 18021, 5168, 20654, 28768, 2164, 6310, 13, 51309], "temperature": 0.0, "avg_logprob": -0.12409333508424085, "compression_ratio": 1.5517241379310345, "no_speech_prob": 2.427699187512733e-11}, {"id": 76, "seek": 45898, "start": 478.6, "end": 480.02000000000004, "text": " Ich fasse nochmal ganz kurz zusammen.", "tokens": [51346, 3141, 283, 8604, 26509, 6312, 20465, 14311, 13, 51417], "temperature": 0.0, "avg_logprob": -0.12409333508424085, "compression_ratio": 1.5517241379310345, "no_speech_prob": 2.427699187512733e-11}, {"id": 77, "seek": 48002, "start": 480.02, "end": 488.71999999999997, "text": " Wir haben in Java eine Datei oder wir legen eine Datei an, die hat dann die Endung .java.", "tokens": [50365, 4347, 3084, 294, 10745, 3018, 31805, 72, 4513, 1987, 48315, 3018, 31805, 72, 364, 11, 978, 2385, 3594, 978, 6967, 1063, 2411, 73, 4061, 13, 50800], "temperature": 0.0, "avg_logprob": -0.10843684456565163, "compression_ratio": 1.488262910798122, "no_speech_prob": 2.5027303146574198e-11}, {"id": 78, "seek": 48002, "start": 489.53999999999996, "end": 493.62, "text": " Diese Datei hat einen Namen, der beginnt mit einem gro\u00dfen Buchstaben.", "tokens": [50841, 18993, 31805, 72, 2385, 4891, 38771, 11, 1163, 1841, 580, 2194, 6827, 23076, 25818, 372, 25071, 13, 51045], "temperature": 0.0, "avg_logprob": -0.10843684456565163, "compression_ratio": 1.488262910798122, "no_speech_prob": 2.5027303146574198e-11}, {"id": 79, "seek": 48002, "start": 494.08, "end": 499.2, "text": " Was es damit auf sich hat, gucken wir uns in, ich w\u00fcrde sagen, eineinhalb Monaten ungef\u00e4hr an.", "tokens": [51068, 3027, 785, 9479, 2501, 3041, 2385, 11, 33135, 1987, 2693, 294, 11, 1893, 11942, 8360, 11, 3018, 259, 13209, 46193, 41285, 364, 13, 51324], "temperature": 0.0, "avg_logprob": -0.10843684456565163, "compression_ratio": 1.488262910798122, "no_speech_prob": 2.5027303146574198e-11}, {"id": 80, "seek": 48002, "start": 499.28, "end": 501.52, "text": " Das hat mit diesem gro\u00dfen Thema Objektorientierung zu tun.", "tokens": [51328, 2846, 2385, 2194, 10975, 23076, 16306, 4075, 14930, 19521, 11651, 2164, 4267, 13, 51440], "temperature": 0.0, "avg_logprob": -0.10843684456565163, "compression_ratio": 1.488262910798122, "no_speech_prob": 2.5027303146574198e-11}, {"id": 81, "seek": 50152, "start": 501.52, "end": 509.91999999999996, "text": " Genauso wie hier diese erste Zeile, Public Class Start, weil die Datei Start hei\u00dft, gucken wir uns alles an.", "tokens": [50365, 3632, 32310, 3355, 3296, 6705, 20951, 4853, 794, 11, 9489, 9471, 6481, 11, 7689, 978, 31805, 72, 6481, 13139, 11, 33135, 1987, 2693, 7874, 364, 13, 50785], "temperature": 0.0, "avg_logprob": -0.11498883482697722, "compression_ratio": 1.411214953271028, "no_speech_prob": 2.340193663852297e-11}, {"id": 82, "seek": 50152, "start": 510.12, "end": 514.86, "text": " Wichtig ist hier auch nat\u00fcrlich, das genauso zu schreiben wie hier, sprich mit einem Gro\u00dfbuchstaben eingel\u00e4utet.", "tokens": [50795, 343, 7334, 1418, 3296, 2168, 8762, 11, 1482, 37694, 2164, 48546, 3355, 3296, 11, 6103, 480, 2194, 6827, 34534, 39742, 372, 25071, 17002, 338, 737, 20364, 13, 51032], "temperature": 0.0, "avg_logprob": -0.11498883482697722, "compression_ratio": 1.411214953271028, "no_speech_prob": 2.340193663852297e-11}, {"id": 83, "seek": 50152, "start": 516.06, "end": 520.8, "text": " Und alles andere kl\u00e4ren wir dann irgendwann sp\u00e4ter im Laufe des Semesters.", "tokens": [51092, 2719, 7874, 10490, 9671, 21465, 1987, 3594, 34313, 24196, 566, 47979, 2106, 730, 14421, 38561, 13, 51329], "temperature": 0.0, "avg_logprob": -0.11498883482697722, "compression_ratio": 1.411214953271028, "no_speech_prob": 2.340193663852297e-11}, {"id": 84, "seek": 52080, "start": 520.8, "end": 528.76, "text": " Durch diese geschweiften Klammern gebe ich immer einen Scope, also einen Umfang sozusagen an, in dem Fall der Umfang von dieser Public Class Start.", "tokens": [50365, 28557, 6705, 13511, 826, 351, 1147, 591, 4326, 44243, 29073, 1893, 5578, 4891, 2747, 1114, 11, 611, 4891, 3301, 19134, 33762, 364, 11, 294, 1371, 7465, 1163, 3301, 19134, 2957, 9053, 9489, 9471, 6481, 13, 50763], "temperature": 0.0, "avg_logprob": -0.10156133900518002, "compression_ratio": 1.7012987012987013, "no_speech_prob": 2.629159390199476e-11}, {"id": 85, "seek": 52080, "start": 529.26, "end": 535.56, "text": " Und in dieser Public Class Start haben wir hier die Main-Methode deklariert, Public Static Void Main, String Arcs.", "tokens": [50788, 2719, 294, 9053, 9489, 9471, 6481, 3084, 1987, 3296, 978, 12383, 12, 44, 3293, 1429, 368, 74, 2200, 4859, 11, 9489, 745, 2399, 7518, 327, 12383, 11, 745, 2937, 1587, 14368, 13, 51103], "temperature": 0.0, "avg_logprob": -0.10156133900518002, "compression_ratio": 1.7012987012987013, "no_speech_prob": 2.629159390199476e-11}, {"id": 86, "seek": 52080, "start": 535.64, "end": 541.38, "text": " Auch das ist eine relativ sperrige Syntax, die man oder die wir im Laufe des Semesters auch verstehen werden,", "tokens": [51107, 13382, 1482, 1418, 3018, 21960, 24152, 81, 3969, 3902, 580, 2797, 11, 978, 587, 4513, 978, 1987, 566, 47979, 2106, 730, 14421, 38561, 2168, 37352, 4604, 11, 51394], "temperature": 0.0, "avg_logprob": -0.10156133900518002, "compression_ratio": 1.7012987012987013, "no_speech_prob": 2.629159390199476e-11}, {"id": 87, "seek": 52080, "start": 541.4799999999999, "end": 548.16, "text": " die aber vielleicht anfangs so ein bisschen auswendig gelernt werden muss oder vielleicht noch nicht so ganz trivial erscheint.", "tokens": [51399, 978, 4340, 12547, 364, 19134, 82, 370, 1343, 10763, 3437, 20128, 328, 49224, 4604, 6425, 4513, 12547, 3514, 1979, 370, 6312, 26703, 33743, 1876, 686, 13, 51733], "temperature": 0.0, "avg_logprob": -0.10156133900518002, "compression_ratio": 1.7012987012987013, "no_speech_prob": 2.629159390199476e-11}, {"id": 88, "seek": 52080, "start": 548.92, "end": 549.7199999999999, "text": " Aber da kommen wir hin.", "tokens": [51771, 5992, 1120, 11729, 1987, 14102, 13, 51811], "temperature": 0.0, "avg_logprob": -0.10156133900518002, "compression_ratio": 1.7012987012987013, "no_speech_prob": 2.629159390199476e-11}, {"id": 89, "seek": 54972, "start": 549.72, "end": 555.6800000000001, "text": " Und innerhalb dieser Main-Methode haben wir jetzt angefangen, richtig in Anf\u00fchrungszeichen zu programmieren,", "tokens": [50365, 2719, 48460, 9053, 12383, 12, 44, 3293, 1429, 3084, 1987, 4354, 43907, 10784, 11, 13129, 294, 1107, 29189, 5846, 1381, 18613, 2164, 37648, 5695, 11, 50663], "temperature": 0.0, "avg_logprob": -0.08626125621146896, "compression_ratio": 1.6409495548961424, "no_speech_prob": 2.8266196674953115e-11}, {"id": 90, "seek": 54972, "start": 555.8000000000001, "end": 559.78, "text": " also unsere ersten Sachen hinzuschreiben, die man auch schon wirklich nachvollziehen konnte,", "tokens": [50669, 611, 14339, 17324, 26074, 14102, 16236, 339, 25946, 11, 978, 587, 2168, 4981, 9696, 5168, 20654, 28768, 24058, 11, 50868], "temperature": 0.0, "avg_logprob": -0.08626125621146896, "compression_ratio": 1.6409495548961424, "no_speech_prob": 2.8266196674953115e-11}, {"id": 91, "seek": 54972, "start": 560.0600000000001, "end": 563.0400000000001, "text": " sprich einmal auf der Konsole einfach Hallo Welt ausgegeben.", "tokens": [50882, 6103, 480, 11078, 2501, 1163, 12718, 9481, 7281, 21242, 14761, 31899, 16702, 13, 51031], "temperature": 0.0, "avg_logprob": -0.08626125621146896, "compression_ratio": 1.6409495548961424, "no_speech_prob": 2.8266196674953115e-11}, {"id": 92, "seek": 54972, "start": 563.5600000000001, "end": 569.28, "text": " Wir haben dabei auch kennengelernt, was die Java-Syntax ist, beziehungsweise was eben nicht die Java-Syntax ist,", "tokens": [51057, 4347, 3084, 14967, 2168, 36272, 1501, 6185, 580, 11, 390, 978, 10745, 12, 50, 88, 580, 2797, 1418, 11, 312, 28213, 5846, 13109, 390, 11375, 1979, 978, 10745, 12, 50, 88, 580, 2797, 1418, 11, 51343], "temperature": 0.0, "avg_logprob": -0.08626125621146896, "compression_ratio": 1.6409495548961424, "no_speech_prob": 2.8266196674953115e-11}, {"id": 93, "seek": 54972, "start": 569.28, "end": 572.5400000000001, "text": " also was passieren kann, wenn ich einen sogenannten Syntax-Fehler begehe.", "tokens": [51343, 611, 390, 46223, 4028, 11, 4797, 1893, 4891, 37467, 14970, 3902, 580, 2797, 12, 37, 13301, 1918, 41832, 675, 13, 51506], "temperature": 0.0, "avg_logprob": -0.08626125621146896, "compression_ratio": 1.6409495548961424, "no_speech_prob": 2.8266196674953115e-11}, {"id": 94, "seek": 54972, "start": 572.82, "end": 578.0, "text": " Und wir haben uns hier auch noch angeguckt, wie wir uns selber zum Beispiel Kommentare setzen k\u00f6nnen,", "tokens": [51520, 2719, 1987, 3084, 2693, 3296, 2168, 3514, 15495, 70, 47800, 11, 3355, 1987, 2693, 23888, 5919, 13772, 46203, 35877, 6310, 11, 51779], "temperature": 0.0, "avg_logprob": -0.08626125621146896, "compression_ratio": 1.6409495548961424, "no_speech_prob": 2.8266196674953115e-11}, {"id": 95, "seek": 57800, "start": 578.0, "end": 581.2, "text": " die dann entsprechend auch vom Compiler ignoriert werden.", "tokens": [50365, 978, 3594, 47823, 2168, 10135, 6620, 5441, 14698, 4859, 4604, 13, 50525], "temperature": 0.0, "avg_logprob": -0.17406951970067516, "compression_ratio": 1.0206185567010309, "no_speech_prob": 2.640355815930473e-11}, {"id": 96, "seek": 57800, "start": 581.86, "end": 584.6, "text": " Okay, soviel dazu. Bis zum n\u00e4chsten Mal.", "tokens": [50558, 1033, 11, 370, 85, 1187, 13034, 13, 25271, 5919, 19101, 5746, 13, 50695], "temperature": 0.0, "avg_logprob": -0.17406951970067516, "compression_ratio": 1.0206185567010309, "no_speech_prob": 2.640355815930473e-11}, {"id": 97, "seek": 58460, "start": 584.6, "end": 590.88, "text": " Doch noch nicht ganz. Ich hatte eine Kleinigkeit versprochen und am Ende des Videos gemerkt,", "tokens": [50365, 21533, 3514, 1979, 6312, 13, 3141, 13299, 3018, 33327, 16626, 1774, 23902, 674, 669, 15152, 730, 25903, 7173, 49015, 11, 50679], "temperature": 0.0, "avg_logprob": -0.08203565934125115, "compression_ratio": 1.4891774891774892, "no_speech_prob": 3.4387135500191235e-11}, {"id": 98, "seek": 58460, "start": 590.98, "end": 594.16, "text": " dass ich sie nicht gezeigt habe. Und zwar hatte ich gesagt, es gibt eine neue M\u00f6glichkeit,", "tokens": [50684, 2658, 1893, 2804, 1979, 48661, 6015, 13, 2719, 19054, 13299, 1893, 12260, 11, 785, 6089, 3018, 16842, 30662, 11, 50843], "temperature": 0.0, "avg_logprob": -0.08203565934125115, "compression_ratio": 1.4891774891774892, "no_speech_prob": 3.4387135500191235e-11}, {"id": 99, "seek": 58460, "start": 594.4, "end": 598.0400000000001, "text": " um diese Main-Methode zu schreiben, die wie gesagt nicht vom VPL unterst\u00fctzt wird.", "tokens": [50855, 1105, 6705, 12383, 12, 44, 3293, 1429, 2164, 48546, 11, 978, 3355, 12260, 1979, 10135, 691, 21593, 30007, 2682, 4578, 13, 51037], "temperature": 0.0, "avg_logprob": -0.08203565934125115, "compression_ratio": 1.4891774891774892, "no_speech_prob": 3.4387135500191235e-11}, {"id": 100, "seek": 58460, "start": 598.38, "end": 601.5, "text": " Ich wollte es aber trotzdem einmal zeigen. Und zwar w\u00e4re die ganz einfach.", "tokens": [51054, 3141, 24509, 785, 4340, 28325, 11078, 24687, 13, 2719, 19054, 14558, 978, 6312, 7281, 13, 51210], "temperature": 0.0, "avg_logprob": -0.08203565934125115, "compression_ratio": 1.4891774891774892, "no_speech_prob": 3.4387135500191235e-11}, {"id": 101, "seek": 60150, "start": 601.5, "end": 609.8, "text": " Wir sparen uns den ganzen Kram, den wir gemacht haben und sagen Void Main, setzen dann runde Klammern und die geschweiften Klammern", "tokens": [50365, 4347, 637, 4484, 2693, 1441, 23966, 591, 2356, 11, 1441, 1987, 12293, 3084, 674, 8360, 7518, 327, 12383, 11, 35877, 3594, 367, 13271, 591, 4326, 44243, 674, 978, 13511, 826, 351, 1147, 591, 4326, 44243, 50780], "temperature": 0.0, "avg_logprob": -0.09106025872407136, "compression_ratio": 1.5019455252918288, "no_speech_prob": 2.646135394135385e-11}, {"id": 102, "seek": 60150, "start": 609.8, "end": 617.8, "text": " und k\u00f6nnten jetzt hier zum Beispiel System Out Print Line irgendwas hinschreiben mit einem Semikolon am Ende,", "tokens": [50780, 674, 37411, 4354, 3296, 5919, 13772, 8910, 5925, 34439, 14670, 47090, 276, 1292, 339, 25946, 2194, 6827, 14421, 1035, 38780, 669, 15152, 11, 51180], "temperature": 0.0, "avg_logprob": -0.09106025872407136, "compression_ratio": 1.5019455252918288, "no_speech_prob": 2.646135394135385e-11}, {"id": 103, "seek": 60150, "start": 618.28, "end": 619.82, "text": " speichern und das Ganze ausf\u00fchren.", "tokens": [51204, 768, 480, 1248, 674, 1482, 35206, 3437, 69, 29540, 13, 51281], "temperature": 0.0, "avg_logprob": -0.09106025872407136, "compression_ratio": 1.5019455252918288, "no_speech_prob": 2.646135394135385e-11}, {"id": 104, "seek": 60150, "start": 620.28, "end": 626.96, "text": " Das Problem ist nur, dass VPL an der Stelle sagt, dass diese unbenannten Klassen ein Vorschau-Feature sind,", "tokens": [51304, 2846, 11676, 1418, 4343, 11, 2658, 691, 21593, 364, 1163, 26629, 15764, 11, 2658, 6705, 517, 1799, 282, 14970, 16053, 8356, 1343, 691, 27457, 1459, 12, 29341, 1503, 3290, 11, 51638], "temperature": 0.0, "avg_logprob": -0.09106025872407136, "compression_ratio": 1.5019455252918288, "no_speech_prob": 2.646135394135385e-11}, {"id": 105, "seek": 62696, "start": 626.96, "end": 631.6800000000001, "text": " was standardm\u00e4\u00dfig deaktiviert ist. Also, dass wir es letzten Endes nicht in VPL nutzen k\u00f6nnen ohne weiteres", "tokens": [50365, 390, 3832, 43132, 368, 5886, 592, 4859, 1418, 13, 2743, 11, 2658, 1987, 785, 18226, 6967, 279, 1979, 294, 691, 21593, 36905, 6310, 15716, 8988, 279, 50601], "temperature": 0.0, "avg_logprob": -0.055553909332033184, "compression_ratio": 1.3715846994535519, "no_speech_prob": 2.2917695519097947e-11}, {"id": 106, "seek": 62696, "start": 631.6800000000001, "end": 636.9200000000001, "text": " und dementsprechend, ja, vielleicht sp\u00e4ter im Laufe des Semesters uns nochmal ansehen k\u00f6nnen,", "tokens": [50601, 674, 368, 1117, 22895, 521, 11, 2784, 11, 12547, 24196, 566, 47979, 2106, 730, 14421, 38561, 2693, 26509, 364, 27750, 6310, 11, 50863], "temperature": 0.0, "avg_logprob": -0.055553909332033184, "compression_ratio": 1.3715846994535519, "no_speech_prob": 2.2917695519097947e-11}, {"id": 107, "seek": 62696, "start": 637.02, "end": 638.82, "text": " aber hier nicht unbedingt verwenden k\u00f6nnen.", "tokens": [50868, 4340, 3296, 1979, 41211, 24615, 8896, 6310, 13, 50958], "temperature": 0.0, "avg_logprob": -0.055553909332033184, "compression_ratio": 1.3715846994535519, "no_speech_prob": 2.2917695519097947e-11}], "language": "de"}